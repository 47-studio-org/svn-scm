{
    "name": "svn-scm",
    "displayName": "SVN",
    "description": "Integrated Subversion source control",
    "version": "2.10.4",
    "publisher": "johnstoncode",
    "engines": {
        "vscode": "^1.42.0"
    },
    "private": true,
    "enableProposedApi": false,
    "icon": "images/subversion.png",
    "homepage": "https://github.com/JohnstonCode/svn-scm/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/JohnstonCode/svn-scm.git"
    },
    "bugs": {
        "url": "https://github.com/JohnstonCode/svn-scm/issues"
    },
    "categories": [
        "Other",
        "SCM Providers"
    ],
    "keywords": [
        "multi-root ready",
        "scm",
        "svn",
        "subversion"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/extension",
    "scripts": {
        "build": "yarn run build:ts && yarn run build:css",
        "build:css": "yarn node-sass scss/ -o css/ --output-style compressed",
        "build:ts": "yarn tsc -p ./",
        "compile": "yarn tsc -watch -p ./",
        "lint": "eslint \"src/**/*.ts\"",
        "lint:fix": "yarn run lint --fix",
        "organize": "node ./out/tools/organize.js",
        "semantic-release": "semantic-release --yarn",
        "style-check": "yarn prettylint 'src/**/*.ts'",
        "style-fix": "yarn prettier --write \"src/**/*.ts\"",
        "test": "node ./out/test/runTest.js",
        "tools:genReadme": "node ./out/tools/generateConfigSectionForReadme.js",
        "vscode:prepublish": "yarn run lint && yarn run build",
        "watch:css": "yarn run build:css -w"
    },
    "dependencies": {
        "chardet": "^0.8.0",
        "dayjs": "^1.8.21",
        "minimatch": "^3.0.4",
        "original-fs": "^1.0.0",
        "semver": "^7.0.0",
        "tmp": "0.1.0",
        "vscode-nls": "^4.1.1",
        "xml2js": "^0.4.19"
    },
    "devDependencies": {
        "@semantic-release/changelog": "^5.0.0",
        "@semantic-release/git": "^9.0.0",
        "@types/chardet": "^0.8.0",
        "@types/glob": "^7.1.1",
        "@types/mocha": "^7.0.0",
        "@types/node": "^12.11.7",
        "@types/semver": "^7.1.0",
        "@types/tmp": "0.1.0",
        "@types/vscode": "1.42.0",
        "@types/xml2js": "^0.4.4",
        "@typescript-eslint/eslint-plugin": "^2.21.0",
        "@typescript-eslint/parser": "^2.21.0",
        "decache": "^4.5.1",
        "del": "^5.1.0",
        "eslint": "^6.5.1",
        "eslint-config-prettier": "^6.10.0",
        "eslint-plugin-prettier": "^3.1.2",
        "event-stream": "^4.0.1",
        "glob": "^7.1.4",
        "gulp": "^4.0.2",
        "gulp-cli": "^2.2.0",
        "gulp-sourcemaps": "^2.6.5",
        "gulp-typescript": "^6.0.0-alpha.1",
        "milligram": "^1.3.0",
        "mocha": "^7.1.0",
        "node-sass": "^4.13.1",
        "prettier": "^1.18.2",
        "prettylint": "^1.0.0",
        "semantic-release": "^17.0.4",
        "semantic-release-vsce": "^3.0.1",
        "typescript": "^3.8.3",
        "vscode-nls-dev": "^3.3.1",
        "vscode-test": "^1.0.0"
    },
    "config": {
        "commitizen": {
            "path": "cz-conventional-changelog"
        }
    },
    "contributes": {
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "svnActivity",
                    "title": "Subversion",
                    "icon": "icons/subversion-logo.svg"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "svn",
                    "name": "SVN"
                }
            ],
            "svnActivity": [
                {
                    "id": "repolog",
                    "name": "Repositories",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "id": "itemlog",
                    "name": "File History",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "id": "branchchanges",
                    "name": "Branch Changes",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                }
            ]
        },
        "commands": [
            {
                "command": "svn.add",
                "title": "%svn.add.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/add.svg",
                    "dark": "icons/dark/add.svg"
                }
            },
            {
                "command": "svn.addToIgnoreExplorer",
                "title": "%svn.addToIgnoreExplorer.title%",
                "category": "SVN"
            },
            {
                "command": "svn.addToIgnoreSCM",
                "title": "%svn.addToIgnoreSCM.title%",
                "category": "SVN"
            },
            {
                "command": "svn.branchchanges.openDiff",
                "category": "SVN",
                "title": "Open diff"
            },
            {
                "command": "svn.branchchanges.refresh",
                "category": "SVN",
                "title": "%svn.branchchanges.refresh.title%",
                "icon": {
                    "dark": "icons/dark/refresh.svg",
                    "light": "icons/light/refresh.svg"
                }
            },
            {
                "command": "svn.changelist",
                "title": "%svn.changelist.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/changelist.svg",
                    "dark": "icons/dark/changelist.svg"
                }
            },
            {
                "command": "svn.checkout",
                "title": "%svn.checkout.title%",
                "category": "SVN"
            },
            {
                "command": "svn.cleanup",
                "title": "%svn.cleanup.title%",
                "category": "SVN"
            },
            {
                "command": "svn.close",
                "title": "%svn.close.title%",
                "category": "SVN"
            },
            {
                "command": "svn.commit",
                "title": "%svn.commit.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/check.svg",
                    "dark": "icons/dark/check.svg"
                }
            },
            {
                "command": "svn.commitWithMessage",
                "title": "%svn.commitWithMessage.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/check.svg",
                    "dark": "icons/dark/check.svg"
                }
            },
            {
                "command": "svn.deleteUnversioned",
                "title": "%svn.deleteUnversioned.title%",
                "category": "SVN"
            },
            {
                "command": "svn.itemlog.copymsg",
                "category": "SVN",
                "title": "%svn.itemlog.copymsg.title%"
            },
            {
                "command": "svn.itemlog.copyrevision",
                "category": "SVN",
                "title": "%svn.itemlog.copyrevision.title%"
            },
            {
                "command": "svn.itemlog.openDiff",
                "title": "%svn.itemlog.openDiff.title%",
                "category": "SVN"
            },
            {
                "command": "svn.itemlog.openDiffBase",
                "title": "%svn.itemlog.openDiffBase.title%",
                "category": "SVN"
            },
            {
                "command": "svn.itemlog.openFileRemote",
                "title": "%svn.itemlog.openFileRemote.title%",
                "category": "SVN"
            },
            {
                "command": "svn.itemlog.refresh",
                "category": "SVN",
                "title": "%svn.itemlog.refresh.title%",
                "icon": {
                    "dark": "icons/dark/refresh.svg",
                    "light": "icons/light/refresh.svg"
                }
            },
            {
                "command": "svn.log",
                "title": "%svn.log.title%",
                "category": "SVN"
            },
            {
                "command": "svn.openChangeBase",
                "title": "%svn.openChangeBase.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/open-change-base.svg",
                    "dark": "icons/dark/open-change-base.svg"
                }
            },
            {
                "command": "svn.openChangeHead",
                "title": "%svn.openChangeHead.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/open-change-head.svg",
                    "dark": "icons/dark/open-change-head.svg"
                }
            },
            {
                "command": "svn.openChangePrev",
                "title": "%svn.openChangePrev.title%",
                "category": "SVN"
            },
            {
                "command": "svn.openFile",
                "title": "%svn.openFile.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/open-file.svg",
                    "dark": "icons/dark/open-file.svg"
                }
            },
            {
                "command": "svn.openHEADFile",
                "title": "%svn.openHEADFile.title%",
                "category": "SVN"
            },
            {
                "command": "svn.patch",
                "title": "%svn.patch.title%",
                "category": "SVN"
            },
            {
                "command": "svn.patchAll",
                "title": "%svn.patchAll.title%",
                "category": "SVN"
            },
            {
                "command": "svn.patchChangeList",
                "title": "%svn.patchChangeList.title%",
                "category": "SVN"
            },
            {
                "command": "svn.pickCommitMessage",
                "title": "%svn.pickCommitMessage.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/icon-history.svg",
                    "dark": "icons/dark/icon-history.svg"
                }
            },
            {
                "command": "svn.refresh",
                "title": "%svn.refresh.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/refresh.svg",
                    "dark": "icons/dark/refresh.svg"
                }
            },
            {
                "command": "svn.refreshRemoteChanges",
                "title": "%svn.refreshRemoteChanges.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/refresh.svg",
                    "dark": "icons/dark/refresh.svg"
                }
            },
            {
                "command": "svn.remove",
                "title": "%svn.remove.title%",
                "category": "SVN"
            },
            {
                "command": "svn.removeUnversioned",
                "title": "%svn.removeUnversioned.title%",
                "category": "SVN"
            },
            {
                "command": "svn.renameExplorer",
                "title": "%svn.renameExplorer.title%",
                "category": "SVN"
            },
            {
                "command": "svn.repolog.addrepolike",
                "category": "SVN",
                "title": "%svn.repolog.addrepolike.title%",
                "icon": {
                    "dark": "icons/dark/add.svg",
                    "light": "icons/light/add.svg"
                }
            },
            {
                "command": "svn.repolog.copymsg",
                "category": "SVN",
                "title": "%svn.repolog.copymsg.title%"
            },
            {
                "command": "svn.repolog.copyrevision",
                "category": "SVN",
                "title": "%svn.repolog.copyrevision.title%"
            },
            {
                "command": "svn.repolog.openDiff",
                "category": "SVN",
                "title": "%svn.repolog.openDiff.title%"
            },
            {
                "command": "svn.repolog.openFileLocal",
                "category": "SVN",
                "title": "%svn.repolog.openFileLocal.title%"
            },
            {
                "command": "svn.repolog.openFileRemote",
                "category": "SVN",
                "title": "%svn.repolog.openFileRemote.title%"
            },
            {
                "command": "svn.repolog.refresh",
                "category": "SVN",
                "title": "%svn.repolog.refresh.title%",
                "icon": {
                    "dark": "icons/dark/refresh.svg",
                    "light": "icons/light/refresh.svg"
                }
            },
            {
                "command": "svn.repolog.remove",
                "category": "SVN",
                "title": "%svn.repolog.remove.title%"
            },
            {
                "command": "svn.resolve",
                "title": "%svn.resolve.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/check.svg",
                    "dark": "icons/dark/check.svg"
                }
            },
            {
                "command": "svn.resolveAll",
                "title": "%svn.resolveAll.title%",
                "category": "SVN"
            },
            {
                "command": "svn.revert",
                "title": "%svn.revert.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/clean.svg",
                    "dark": "icons/dark/clean.svg"
                }
            },
            {
                "command": "svn.revertAll",
                "title": "%svn.revertAll.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/clean.svg",
                    "dark": "icons/dark/clean.svg"
                }
            },
            {
                "command": "svn.revertChange",
                "title": "%svn.revertChange.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/clean.svg",
                    "dark": "icons/dark/clean.svg"
                }
            },
            {
                "command": "svn.revertExplorer",
                "title": "%svn.revertExplorer.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/clean.svg",
                    "dark": "icons/dark/clean.svg"
                }
            },
            {
                "command": "svn.searchLogByRevision",
                "title": "%svn.searchLogByRevision.title%",
                "category": "SVN"
            },
            {
                "command": "svn.searchLogByText",
                "title": "%svn.searchLogByText.title%",
                "category": "SVN"
            },
            {
                "command": "svn.switchBranch",
                "title": "%svn.switchBranch.title%",
                "category": "SVN"
            },
            {
                "command": "svn.treeview.pullIncomingChange",
                "title": "%svn.treeview.pullIncomingChange.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/download.svg",
                    "dark": "icons/dark/download.svg"
                }
            },
            {
                "command": "svn.treeview.refreshProvider",
                "title": "%svn.treeview.refreshProvider.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/refresh.svg",
                    "dark": "icons/dark/refresh.svg"
                }
            },
            {
                "command": "svn.update",
                "title": "%svn.update.title%",
                "category": "SVN",
                "icon": {
                    "light": "icons/light/download.svg",
                    "dark": "icons/dark/download.svg"
                }
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "svn.add",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.addToIgnoreExplorer",
                    "when": "false"
                },
                {
                    "command": "svn.branchchanges.openDiff",
                    "when": "false"
                },
                {
                    "command": "svn.branchchanges.refresh",
                    "when": "false"
                },
                {
                    "command": "svn.changelist",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.checkout",
                    "when": "config.svn.enabled"
                },
                {
                    "command": "svn.cleanup",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.close",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.commit",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.commitWithMessage",
                    "when": "false"
                },
                {
                    "command": "svn.deleteUnversioned",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.copymsg",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.copyrevision",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.openDiff",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.openDiffBase",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.openFileRemote",
                    "when": "false"
                },
                {
                    "command": "svn.itemlog.refresh",
                    "when": "false"
                },
                {
                    "command": "svn.log",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.openChangeBase",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && svnActiveEditorHasChanges"
                },
                {
                    "command": "svn.openChangeHead",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && svnActiveEditorHasChanges"
                },
                {
                    "command": "svn.openFile",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.openHEADFile",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.patch",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.patchAll",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.pickCommitMessage",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.refresh",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.remove",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.removeUnversioned",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && isSvn19orGreater"
                },
                {
                    "command": "svn.renameExplorer",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.addrepolike",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.copymsg",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.copyrevision",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.openDiff",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.openFileLocal",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.openFileRemote",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.refresh",
                    "when": "false"
                },
                {
                    "command": "svn.repolog.remove",
                    "when": "false"
                },
                {
                    "command": "svn.resolve",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.resolveAll",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.revert",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.revertAll",
                    "when": "false"
                },
                {
                    "command": "svn.revertChange",
                    "when": "false"
                },
                {
                    "command": "svn.revertExplorer",
                    "when": "false"
                },
                {
                    "command": "svn.searchLogByRevision",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.searchLogByText",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && isSvn18orGreater"
                },
                {
                    "command": "svn.switchBranch",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.update",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                }
            ],
            "view/title": [
                {
                    "command": "svn.treeview.refreshProvider",
                    "when": "view == svn",
                    "group": "navigation"
                },
                {
                    "command": "svn.repolog.refresh",
                    "when": "view == repolog",
                    "group": "navigation"
                },
                {
                    "command": "svn.repolog.addrepolike",
                    "when": "view == repolog",
                    "group": "navigation"
                },
                {
                    "command": "svn.itemlog.refresh",
                    "when": "view == itemlog",
                    "group": "navigation"
                },
                {
                    "command": "svn.branchchanges.refresh",
                    "when": "view == branchchanges",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "svn.openHEADFile",
                    "when": "viewItem =~ /incomingChange:(added|modified)/"
                },
                {
                    "command": "svn.openFile",
                    "when": "viewItem =~ /incomingChange:(modified|deleted)/"
                },
                {
                    "command": "svn.treeview.pullIncomingChange",
                    "when": "viewItem =~ /incomingChange:*/"
                },
                {
                    "command": "svn.openChangeHead",
                    "when": "viewItem == incomingChange:modified"
                },
                {
                    "command": "svn.repolog.remove",
                    "when": "view == repolog && viewItem == userrepo"
                },
                {
                    "command": "svn.itemlog.openFileRemote",
                    "when": "view == itemlog && viewItem == diffable"
                },
                {
                    "command": "svn.itemlog.openDiff",
                    "when": "view == itemlog && viewItem == diffable",
                    "group": "1_diff"
                },
                {
                    "command": "svn.itemlog.openDiffBase",
                    "when": "view == itemlog && viewItem == diffable",
                    "group": "1_diff"
                },
                {
                    "command": "svn.itemlog.copymsg",
                    "when": "view == itemlog && viewItem == diffable"
                },
                {
                    "command": "svn.itemlog.copyrevision",
                    "when": "view == itemlog && viewItem == diffable"
                },
                {
                    "command": "svn.repolog.openDiff",
                    "when": "view == repolog && viewItem == diffable"
                },
                {
                    "command": "svn.repolog.openFileRemote",
                    "when": "view == repolog && viewItem == diffable"
                },
                {
                    "command": "svn.repolog.openFileLocal",
                    "when": "view == repolog && viewItem == diffable"
                },
                {
                    "command": "svn.repolog.refresh",
                    "when": "view == repolog && viewItem =~ /.*repo/"
                },
                {
                    "command": "svn.repolog.copymsg",
                    "when": "view == repolog && viewItem == commit"
                },
                {
                    "command": "svn.repolog.copyrevision",
                    "when": "view == repolog && viewItem == commit"
                }
            ],
            "scm/title": [
                {
                    "command": "svn.commitWithMessage",
                    "group": "navigation",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.refresh",
                    "group": "navigation",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.pickCommitMessage",
                    "group": "navigation",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.switchBranch",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.update",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.patchAll",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.resolveAll",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.log",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.cleanup",
                    "when": "config.svn.enabled && scmProvider == svn"
                },
                {
                    "command": "svn.removeUnversioned",
                    "when": "config.svn.enabled && scmProvider == svn && isSvn19orGreater"
                },
                {
                    "command": "svn.patchChangeList",
                    "when": "config.svn.enabled && scmProvider == svn"
                }
            ],
            "scm/sourceControl": [
                {
                    "command": "svn.close",
                    "group": "navigation",
                    "when": "scmProvider == svn"
                }
            ],
            "scm/resourceGroup/context": [
                {
                    "command": "svn.refreshRemoteChanges",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "inline"
                },
                {
                    "command": "svn.refreshRemoteChanges",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "navigation"
                },
                {
                    "command": "svn.update",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "inline"
                },
                {
                    "command": "svn.update",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "navigation"
                },
                {
                    "command": "svn.revertAll",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == changes",
                    "group": "navigation"
                },
                {
                    "command": "svn.revertAll",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == changes",
                    "group": "inline"
                }
            ],
            "scm/resourceState/context": [
                {
                    "command": "svn.add",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
                    "group": "inline"
                },
                {
                    "command": "svn.add",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
                    "group": "1_modification"
                },
                {
                    "command": "svn.openFile",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != external",
                    "group": "navigation"
                },
                {
                    "command": "svn.openHEADFile",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
                    "group": "navigation"
                },
                {
                    "command": "svn.openChangeBase",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
                    "group": "navigation"
                },
                {
                    "command": "svn.openChangeHead",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external",
                    "group": "navigation"
                },
                {
                    "command": "svn.patch",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "navigation"
                },
                {
                    "command": "svn.resolve",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == conflicts",
                    "group": "inline"
                },
                {
                    "command": "svn.resolve",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == conflicts",
                    "group": "1_modification"
                },
                {
                    "command": "svn.changelist",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "inline"
                },
                {
                    "command": "svn.changelist",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "1_modification"
                },
                {
                    "command": "svn.commit",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "1_modification"
                },
                {
                    "command": "svn.revert",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "2_modification"
                },
                {
                    "command": "svn.revert",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "inline"
                },
                {
                    "command": "svn.remove",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
                    "group": "2_modification"
                },
                {
                    "command": "svn.deleteUnversioned",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
                    "group": "2_modification"
                },
                {
                    "command": "svn.addToIgnoreSCM",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == unversioned",
                    "group": "1_modification"
                },
                {
                    "command": "svn.treeview.pullIncomingChange",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "inline"
                },
                {
                    "command": "svn.treeview.pullIncomingChange",
                    "when": "config.svn.enabled && scmProvider == svn && scmResourceGroup == remotechanges",
                    "group": "3_modification"
                }
            ],
            "scm/change/title": [
                {
                    "command": "svn.revertChange",
                    "when": "config.svn.enabled && originalResourceScheme == svn"
                }
            ],
            "editor/title": [
                {
                    "command": "svn.openFile",
                    "group": "navigation",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme != extension && resourceScheme != merge-conflicts.conflicts-diff"
                },
                {
                    "command": "svn.openChangeBase",
                    "group": "navigation",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && svnActiveEditorHasChanges && !isInDiffEditor && resourceScheme == file"
                },
                {
                    "command": "svn.openChangeHead",
                    "group": "navigation",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && svnActiveEditorHasChanges && !isInDiffEditor && resourceScheme == file"
                }
            ],
            "explorer/context": [
                {
                    "command": "svn.addToIgnoreExplorer",
                    "group": "9_svn",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.renameExplorer",
                    "group": "7_modification",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0 && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
                },
                {
                    "command": "svn.changelist",
                    "group": "9_svn",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                },
                {
                    "command": "svn.revertExplorer",
                    "group": "7_modification",
                    "when": "config.svn.enabled && svnOpenRepositoryCount != 0"
                }
            ]
        },
        "configuration": {
            "title": "Svn",
            "properties": {
                "svn.autorefresh": {
                    "type": "boolean",
                    "description": "%svn.autorefresh.description%",
                    "default": true
                },
                "svn.commit.changes.selectedAll": {
                    "type": "boolean",
                    "description": "%svn.commit.changes.selectedAll.description%",
                    "default": true
                },
                "svn.conflicts.autoResolve": {
                    "type": "boolean",
                    "description": "%svn.conflicts.autoResolve.description%",
                    "default": false
                },
                "svn.default.encoding": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%svn.default.encoding.description%",
                    "default": null
                },
                "svn.defaultCheckoutDirectory": {
                    "type": "string",
                    "default": null,
                    "description": "%svn.defaultCheckoutDirectory.description%"
                },
                "svn.delete.actionForDeletedFiles": {
                    "type": "string",
                    "enum": [
                        "none",
                        "prompt",
                        "remove"
                    ],
                    "description": "%svn.delete.actionForDeletedFiles.description%",
                    "default": "prompt"
                },
                "svn.delete.ignoredRulesForDeletedFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "%svn.delete.ignoredRulesForDeletedFiles.description%",
                    "default": []
                },
                "svn.detectExternals": {
                    "type": "boolean",
                    "default": true,
                    "description": "%svn.detectExternals.description%"
                },
                "svn.detectIgnored": {
                    "type": "boolean",
                    "default": true,
                    "description": "%svn.detectIgnored.description%"
                },
                "svn.diff.withHead": {
                    "type": "boolean",
                    "description": "%svn.diff.withHead.description%",
                    "default": true
                },
                "svn.enabled": {
                    "type": "boolean",
                    "description": "%svn.enabled.description%",
                    "default": true
                },
                "svn.experimental.detect_encoding": {
                    "type": "boolean",
                    "description": "%svn.experimental.detect_encoding.description%",
                    "default": false
                },
                "svn.experimental.encoding_priority": {
                    "type": "array",
                    "description": "%svn.experimental.encoding_priority.description%",
                    "default": [],
                    "examples": [
                        [
                            "UTF-8",
                            "GB18030",
                            "windows-1251"
                        ]
                    ]
                },
                "svn.gravatar.icon_url": {
                    "type": "string",
                    "description": "%svn.gravatar.icon_url.description%",
                    "examples": [
                        "https://www.gravatar.com/avatar/<AUTHOR_MD5>.jpg?s=<SIZE>&d=https%3A%2F%2Fui-avatars.com%2Fapi%2F/<AUTHOR>/128"
                    ],
                    "default": "https://www.gravatar.com/avatar/<AUTHOR_MD5>.jpg?s=<SIZE>&d=robohash"
                },
                "svn.gravatars.enabled": {
                    "type": "boolean",
                    "description": "%svn.gravatars.enabled.description%",
                    "default": true
                },
                "svn.ignoreMissingSvnWarning": {
                    "type": "boolean",
                    "description": "%svn.ignoreMissingSvnWarning.description%",
                    "default": false
                },
                "svn.ignoreRepositories": {
                    "type": [
                        "array",
                        null
                    ],
                    "default": null,
                    "scope": "resource",
                    "description": "%svn.ignoreRepositories.description%"
                },
                "svn.ignoreWorkingCopyIsTooOld": {
                    "type": "boolean",
                    "description": "%svn.ignoreWorkingCopyIsTooOld.description%",
                    "default": false
                },
                "svn.layout.branchesRegex": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%svn.layout.branchesRegex.description%",
                    "default": "branches/([^/]+)(/.*)?"
                },
                "svn.layout.branchesRegexName": {
                    "type": [
                        "number"
                    ],
                    "description": "%svn.layout.branchesRegexName.description%",
                    "default": 1
                },
                "svn.layout.showFullName": {
                    "type": [
                        "boolean"
                    ],
                    "description": "%svn.layout.showFullName.description%",
                    "default": true
                },
                "svn.layout.tagRegexName": {
                    "type": [
                        "number"
                    ],
                    "description": "%svn.layout.tagRegexName.description%",
                    "default": 1
                },
                "svn.layout.tagsRegex": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%svn.layout.tagsRegex.description%",
                    "default": "tags/([^/]+)(/.*)?"
                },
                "svn.layout.trunkRegex": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%svn.layout.trunkRegex.description%",
                    "default": "(trunk)(/.*)?"
                },
                "svn.layout.trunkRegexName": {
                    "type": [
                        "number"
                    ],
                    "description": "%svn.layout.trunkRegexName.description%",
                    "default": 1
                },
                "svn.log.length": {
                    "type": "number",
                    "minimum": 1,
                    "description": "%svn.log.length.description%",
                    "default": 50
                },
                "svn.multipleFolders.depth": {
                    "type": "number",
                    "minimum": 0,
                    "description": "%svn.multipleFolders.depth.description%",
                    "default": 4
                },
                "svn.multipleFolders.enabled": {
                    "type": "boolean",
                    "description": "%svn.multipleFolders.enabled.description%",
                    "default": false
                },
                "svn.multipleFolders.ignore": {
                    "type": "array",
                    "description": "%svn.multipleFolders.ignore.description%",
                    "default": [
                        "**/.git",
                        "**/.hg",
                        "**/vendor",
                        "**/node_modules"
                    ]
                },
                "svn.path": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "%svn.path.description%",
                    "default": null,
                    "scope": "machine"
                },
                "svn.refresh.remoteChanges": {
                    "type": "boolean",
                    "description": "%svn.refresh.remoteChanges.description%",
                    "default": false
                },
                "svn.remoteChanges.checkFrequency": {
                    "type": "number",
                    "description": "%svn.remoteChanges.checkFrequency.description%",
                    "default": 300
                },
                "svn.showOutput": {
                    "type": "boolean",
                    "description": "%svn.showOutput.description%",
                    "default": false
                },
                "svn.showUpdateMessage": {
                    "type": "boolean",
                    "description": "%svn.showUpdateMessage.description%",
                    "default": true
                },
                "svn.sourceControl.changesLeftClick": {
                    "type": "string",
                    "enum": [
                        "open",
                        "open diff"
                    ],
                    "description": "%svn.sourceControl.changesLeftClick.description%",
                    "default": "open diff"
                },
                "svn.sourceControl.combineExternalIfSameServer": {
                    "type": "boolean",
                    "default": false,
                    "description": "%svn.sourceControl.combineExternalIfSameServer.description%"
                },
                "svn.sourceControl.countUnversioned": {
                    "type": "boolean",
                    "description": "%svn.sourceControl.countUnversioned.description%",
                    "default": true
                },
                "svn.sourceControl.hideUnversioned": {
                    "type": "boolean",
                    "description": "%svn.sourceControl.hideUnversioned.description%",
                    "default": false
                },
                "svn.sourceControl.ignoreOnCommit": {
                    "type": "array",
                    "description": "%svn.sourceControl.ignoreOnCommit.description%",
                    "default": [
                        "ignore-on-commit"
                    ]
                },
                "svn.sourceControl.ignoreOnStatusCount": {
                    "type": "array",
                    "description": "%svn.sourceControl.ignoreOnStatusCount.description%",
                    "default": [
                        "ignore-on-commit"
                    ]
                },
                "svn.update.ignoreExternals": {
                    "type": "boolean",
                    "description": "%svn.update.ignoreExternals.description%",
                    "default": true
                }
            }
        }
    }
}
